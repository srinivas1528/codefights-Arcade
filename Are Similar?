/*
Two arrays are called similar if one can be obtained from another by swapping at most one pair of elements in one of the arrays.

Given two arrays a and b, check whether they are similar.

Example

For a = [1, 2, 3] and b = [1, 2, 3], the output should be
areSimilar(a, b) = true.

The arrays are equal, no need to swap any elements.

For a = [1, 2, 3] and b = [2, 1, 3], the output should be
areSimilar(a, b) = true.

We can obtain b from a by swapping 2 and 1 in b.

For a = [1, 2, 2] and b = [2, 1, 1], the output should be
areSimilar(a, b) = false.

Any swap of any two elements either in a or in b won't make a and b equal.

Input/Output

[execution time limit] 3 seconds (java)

[input] array.integer a

Array of integers.

Guaranteed constraints:
3 ≤ a.length ≤ 105,
1 ≤ a[i] ≤ 1000.

[input] array.integer b

Array of integers of the same length as a.

Guaranteed constraints:
b.length = a.length,
1 ≤ b[i] ≤ 1000.

[output] boolean

true if a and b are similar, false otherwise.
*/


Solution-- (Java)


boolean areSimilar(int[] a, int[] b) {
    
    ArrayList<Integer> list1 = new ArrayList();
    for(int i = 0; i <a.length; i++){
        list1.add(a[i]);
    }

    ArrayList<Integer> list2 = new ArrayList();
    for(int j =0; j < b.length; j++){
        list2.add(b[j]);
    }

    int count =0;
    int swapper =0;
    int test =0;
    int temp1 =0;
    int temp2 = 0;
    if(list1.size() == list1.size()){
        for(int i= 0; i < list1.size(); i++){
            if(list1.get(i).equals(list2.get(i))){
                test++;
             }
            else{
                int countPair1 = list1.get(i);
                int countPair2 = list2.get(i);
                count++;
                if(countPair1== temp2 && countPair2 == temp1){
                    swapper++;
                }
                temp1 =countPair1;
                temp2 = countPair2;
             }       
        }
    }
    //exactly similar
    if(test == list2.size()){
        return true;
    }
    else if(count == 2 && swapper ==1 ){
        return true;
    }
    else if(count >= 2){
        return false;
    }
    return true;
}



