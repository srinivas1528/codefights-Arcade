/*Ticket numbers usually consist of an even number of digits. A ticket number is considered lucky if the sum of the first half of the digits is equal to the sum of the second half.

Given a ticket number n, determine if it's lucky or not.

Example

For n = 1230, the output should be
isLucky(n) = true;
For n = 239017, the output should be
isLucky(n) = false.
Input/Output

[execution time limit] 3 seconds (java)

[input] integer n

A ticket number represented as a positive integer with an even number of digits.

Guaranteed constraints:
10 â‰¤ n < 106.

[output] boolean

true if n is a lucky ticket number, false otherwise
*/

Solution --
boolean isLucky(int n) {
    // int len = (int)(Math.log10(n)+1);

     String temp = Integer.toString(n);
    System.out.println(temp);
    int[] a = new int[temp.length()];
    for (int i = 0; i < temp.length(); i++)
     {
         a[i] = temp.charAt(i) - '0';
        System.out.println(a[i]);
     }
    
    int val = 0;
    int val2 = 0;
    for(int i =0; i < a.length/2; i++){
        val += a[i];
    }
     for(int i =a.length/2; i < a.length; i++){
        val2 += a[i];
    }
    System.out.println(val);
    if(val == val2){
        return true;
    }
    
    return false;
}
